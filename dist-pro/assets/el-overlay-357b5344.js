import{z as e,b0 as t,S as o,aZ as n,a6 as s,az as a,K as u,cU as l,aS as d,b2 as c,M as i,aK as m,br as r,cV as v,bq as p,ao as f,I as y,an as b,d as M,e as h,O as x,a5 as E}from"./index-4e0241ab.js";import{l as g}from"./tsxHelper-77188c3c.js";import{P as k}from"./vnode-c3126f89.js";const w=(s,a,u,l)=>{let d={offsetX:0,offsetY:0};const c=e=>{const t=e.clientX,o=e.clientY,{offsetX:a,offsetY:u}=d,c=s.value.getBoundingClientRect(),i=c.left,m=c.top,r=c.width,v=c.height,p=document.documentElement.clientWidth,f=document.documentElement.clientHeight,y=-i+a,b=-m+u,M=p-i-r+a,h=f-m-v+u,x=e=>{let c=a+e.clientX-t,i=u+e.clientY-o;(null==l?void 0:l.value)||(c=Math.min(Math.max(c,y),M),i=Math.min(Math.max(i,b),h)),d={offsetX:c,offsetY:i},s.value&&(s.value.style.transform=`translate(${n(c)}, ${n(i)})`)},E=()=>{document.removeEventListener("mousemove",x),document.removeEventListener("mouseup",E)};document.addEventListener("mousemove",x),document.addEventListener("mouseup",E)},i=()=>{a.value&&s.value&&a.value.removeEventListener("mousedown",c)};e((()=>{t((()=>{u.value?a.value&&s.value&&a.value.addEventListener("mousedown",c):i()}))})),o((()=>{i()}))},C=(e,t={})=>{s(e)||a("[useLockscreen]","You need to pass a ref param to this function");const o=t.ns||u("popup"),n=l((()=>o.bm("parent","hidden")));if(!d||c(document.body,n.value))return;let f=0,y=!1,b="0";const M=()=>{setTimeout((()=>{p(null==document?void 0:document.body,n.value),y&&document&&(document.body.style.width=b)}),200)};i(e,(e=>{if(!e)return void M();y=!c(document.body,n.value),y&&(b=document.body.style.width),f=g(o.namespace.value);const t=document.documentElement.clientHeight<document.body.scrollHeight,s=m(document.body,"overflowY");f>0&&(t||"scroll"===s)&&y&&(document.body.style.width=`calc(100% - ${f}px)`),r(document.body,n.value)})),v((()=>M()))},L=e=>{if(!e)return{onClick:f,onMousedown:f,onMouseup:f};let t=!1,o=!1;return{onClick:n=>{t&&o&&e(n),t=o=!1},onMousedown:e=>{t=e.target===e.currentTarget},onMouseup:e=>{o=e.target===e.currentTarget}}},S=y({mask:{type:Boolean,default:!0},customMaskEvent:{type:Boolean,default:!1},overlayClass:{type:b([String,Array,Object])},zIndex:{type:b([String,Number])}});const Y=M({name:"ElOverlay",props:S,emits:{click:e=>e instanceof MouseEvent},setup(e,{slots:t,emit:o}){const n=u("overlay"),{onClick:s,onMousedown:a,onMouseup:l}=L(e.customMaskEvent?void 0:e=>{o("click",e)});return()=>e.mask?h("div",{class:[n.b(),e.overlayClass],style:{zIndex:e.zIndex},onClick:s,onMousedown:a,onMouseup:l},[x(t,"default")],k.STYLE|k.CLASS|k.PROPS,["onClick","onMouseup","onMousedown"]):E("div",{class:e.overlayClass,style:{zIndex:e.zIndex,position:"fixed",top:"0px",right:"0px",bottom:"0px",left:"0px"}},[x(t,"default")])}});export{Y as E,C as a,L as b,w as u};
